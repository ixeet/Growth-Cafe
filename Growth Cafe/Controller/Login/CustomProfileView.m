////  CustomContentView.m//  sLMS////  Created by Mayank on 22/07/15.//  Copyright (c) 2015 Mayank. All rights reserved.//#import "CustomProfileView.h"@implementation CustomProfileView@synthesize lblClass,lblHome,lblName,btnImg,btnFacebook,lblSchoolName;// Only override drawRect: if you perform custom drawing.// An empty implementation adversely affects performance during animation.- (void)drawRect:(CGRect)rect {    // Drawing code}- (id)initWithFrame:(CGRect)frame{    self = [super initWithFrame:frame];    if (self) {        [[NSBundle mainBundle] loadNibNamed:@"CustomProfileView" owner:self options:nil];        // self.bounds =self.view.bounds;                //[self addSubview:self.view];            }    [self setUserProfile];  //  [self toggleHiddenState:YES];    // self.lblLoginStatus.text = @"";        self.btnFacebook.delegate = self;    self.btnFacebook.readPermissions = @[@"public_profile", @"email"];    [self changeFrameAndBackgroundImg];    return self;}#pragma mark - Private method implementation-(void)changeFrameAndBackgroundImg{        //  _btnFacebook.frame = CGRectMake(0, _btnFacebook.frame.origin.y+14, _btnFacebook.frame.size.width, 120);    //  _btnFacebook.frame = CGRectMake(320/2 - 93/2, self.view.frame.size.height -200, 93, 40);      btnFacebook.delegate   =self;    for (id loginObject in btnFacebook.subviews)    {        if ([loginObject isKindOfClass:[UIButton class]])        {            UIButton * loginButton =  loginObject;            UIImage *loginImage = [UIImage imageNamed:@"validate-facebook.png"];            // loginButton.alpha = 0.7;            [loginButton setBackgroundColor:[UIColor colorWithRed:186.0 green:0.0 blue:50.0 alpha:0.0]];            [loginButton setBackgroundImage:nil forState:UIControlStateSelected];            [loginButton setBackgroundImage:nil forState:UIControlStateHighlighted];            [loginButton setBackgroundImage:loginImage forState:UIControlStateNormal];            //CGSize constraint = CGSizeMake(400, 220);            // [loginButton sizeThatFits:constraint];            //[loginButton sizeToFit];        }        if ([loginObject isKindOfClass:[UILabel class]])        {            UILabel * loginLabel =  loginObject;            loginLabel.text = @"";            loginLabel.frame = CGRectMake(0, 0, 0, 0);        }    }}-(void)toggleHiddenState:(BOOL)shouldHide{    //    self.lblUsername.hidden = shouldHide;    //    self.lblEmail.hidden = shouldHide;    //    self.profilePicture.hidden = shouldHide;}-(void)setUserProfile {    // UserDetails *user=[AppGlobal readUserDetail];    UserDetails *user=[AppSingleton sharedInstance].userDetail;            lblName.text=user.userFirstName;    lblSchoolName.text=user.schoolName;        lblClass.text=user.className;    lblHome.text=user.homeRoomName;    if(user.userFBID==nil)    {        //need to validate        btnFacebook.hidden=NO;    }else{        //FB allready validated        btnFacebook.hidden=YES;    }}- (id)initWithCoder:(NSCoder *)coder{    self = [super initWithCoder:coder];    if (self) {        //  [[NSBundle mainBundle] loadNibNamed:@"CustomContentView" owner:self options:nil];        //[self addSubview:self.view];    }    return self;    }//- (IBAction)sidebtn:(id)sender {//////////    [self.view setFrame:CGRectMake([self.view frame].size.width,0, self.view.frame.size.width, self.view.frame.size.height)];//    [CATransaction begin];//    CATransition *animation = [CATransition animation];//    [CATransaction setCompletionBlock:^{//       [self.view removeFromSuperview];////                   }];//    [animation setDuration:1.0];//    [animation setType:kCATransitionPush];//    [animation setSubtype:kCATransitionFromLeft];//    //[self.view removeFromSuperview];////    [animation setTimingFunction:[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut]];//    [[self.view layer] addAnimation:animation forKey:nil];//    [CATransaction commit];////}/*   - (IBAction)slidebutton:(UIButton *)sender { [self fadeInAnimation:_view];  } -(void)fadeInAnimation:(UIView *)aView {  CATransition *animation = [CATransition animation]; [animation setDuration:1.0]; [animation setType:kCATransitionPush]; [animation setSubtype:kCATransitionFromLeft]; [animation setTimingFunction:[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut]];  [[aView layer] addAnimation:animation forKey:@"SwitchToView1"]; }*/#pragma mark - FBLoginView Delegate method implementation-(void)loginViewShowingLoggedInUser:(FBLoginView *)loginView{    // self.lblLoginStatus.text = @"You are logged in.";    //    [self toggleHiddenState:NO];//    [self changeFrameAndBackgroundImg];}-(void)loginViewFetchedUserInfo:(FBLoginView *)loginView user:(id<FBGraphUser>)user{    NSLog(@"%@", user);    //if user is already sign in Then validate with server.        // get user id    NSString *fbuserid=[NSString  stringWithFormat:@"%@",[user objectForKey:@"id"]];    //set user Profile    //Show Indicator    NSString *username=[AppSingleton sharedInstance].userDetail.userEmail;            [appDelegate showSpinnerWithMessage:DATA_LOADING_MSG];        [[appDelegate _engine] SetFBloginWithUserID:username FBID:fbuserid success:^(bool status) {        self.btnFacebook.hidden=YES;        [self loginSucessFullWithFB:fbuserid];        //Hide Indicator        [appDelegate hideSpinner];                    } failure:^(NSError *error) {        //Hide Indicator        [appDelegate hideSpinner];        NSLog(@"failure JsonData %@",[error description]);        [self loginViewShowingLoggedOutUser:loginView];                [self loginError:error];            }];    }-(void)loginSucessFullWithFB:(NSString*)userid {    // if FB Varification is done then navigate the main screen        [AppGlobal  setValueInDefault:userid value:key_FBUSERID];    }-(void)loginViewShowingLoggedOutUser:(FBLoginView *)loginView{    // self.lblLoginStatus.text = @"You are logged out";    [FBSession.activeSession closeAndClearTokenInformation];    [FBSession.activeSession close];    [FBSession setActiveSession:nil];    //[self toggleHiddenState:YES];}-(void)loginError:(NSError*)error{        [AppGlobal showAlertWithMessage:[[error userInfo] objectForKey:NSLocalizedDescriptionKey] title:@""];}@end